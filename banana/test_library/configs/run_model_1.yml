general:
  description: This is a test model of banana
  working_dir: ./output_test_dir                              # where to output the data
  libraries_dirs: ./                                          # where to find the modules, variables, etc (str or list of str)                                       
  load_working_dir: False                                     # load configuration stored in working dir
  copy_data: True                                             # copy data to working dir
  copy_libraries: False                                       # not implemented yet
    
logging:
    verbosity: 2                                              # general verbosity of the core
    debug_classes: &debug_classes ['Redshifts']               # targeted verbosity for modules / variables etc (initialization)
    highlights: *debug_classes                                # highlight words in the std output

strategy:
    strategy: StrategyFullRun                       # what strategy to run 

    run_debug:                                      # run debug 
      run: False                                    # True, False, 'only' -> crash after debug run
      debug_classes: *debug_classes                 # which classes to run debug on

    run_kernel_warmup:
      kernel: KernelDualAveragingNUTS                 # Kernel to run for warmup -> NUTS with step size adaptation
      dual_avg_kwargs:                                # see tensorflow_probability for details about these
        num_adaptation_steps: 80
      nuts_kwargs:                                
        max_tree_depth: 8
      sample_chain_kwargs:
        num_results: 100            
        num_steps_between_results: 1

    run_kernel_main:                                  # Kernel to run for main
      kernel: KernelNUTS
      nuts_kwargs:
        max_tree_depth: 8                 
      sample_chain_kwargs:
        num_results: 100
        num_steps_between_results: 1

parameters:                         # parameters accessible by all classes at initialization
    sigma_v: 300.                   # can be float, int, str, dict, list, tuple but NO LARGE DATA
    cosmology:                      # dict can be accessed as a whole
      h0: .746                      # or just parts of it                               
      Omega_m: 0.3 

data:                               # large data
    example:
      path: ./data/observations_CF4gp.txt
      filters:                      # Keep data such
        cut_type_0_redshift: 
          - [type, 0]                # select type == 0
          - [z_tot, 0.01, .05]      # select -inf < z_tot < 0.05
        cut_type_1_redshift:        # OR
          - [type, 1]                # select type == 1
          - [z_tot, 0.01, .04]      # select -inf < z_tot < 0.04
        cut_type_2_redshift:        # OR
          - [type, 2]                # select type == 2
          - [z_tot, 0.01, .03]      # select -inf < z_tot < 0.03

  # you can load another data set here


variables:
  Distances: ~
  Velocities: ~

modules:
  LikelihoodDistanceModuli: ~
  LikelihoodRedshifts: ~
  PriorDistances: ~
  PriorVelocities: ~
  # The rest is infered

analyses:
  TestAnalysis: 
    plot_level: 1     # my convention: 0 don't | 1: just finalize | 2: finalize & oneState
    save_level: 1

